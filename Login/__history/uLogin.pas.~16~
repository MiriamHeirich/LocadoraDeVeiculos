unit uLogin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Imaging.pngimage, Vcl.Buttons, Data.DB, ZAbstractRODataset,
  ZAbstractDataset, ZDataset, ZAbstractConnection, ZConnection, SysInit;

type
  TfrmLogin = class(TForm)
    pnlFundo: TPanel;
    pnlLateral: TPanel;
    lblMfhLocadora: TLabel;
    lblDesenvovedor: TLabel;
    Panel1: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    lblVersao: TLabel;
    Image1: TImage;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    lblDigiteUsuario: TLabel;
    pnlNome: TPanel;
    edtNome: TEdit;
    Label7: TLabel;
    pnlBotão: TPanel;
    btnAbort: TSpeedButton;
    Panel2: TPanel;
    lblSenha: TLabel;
    edtSenha: TEdit;
    ConexaoBD: TZConnection;
    qryLogin: TZQuery;
    procedure btnAbortClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure pnlBotãoClick(Sender: TObject);
  private
    { Private declarations }
     function habilitarLogin (teste:string):Integer;
  public
    { Public declarations }
  end;

var
  frmLogin: TfrmLogin;

implementation

{$R *.dfm}

procedure TfrmLogin.btnAbortClick(Sender: TObject);
begin
     Close;
end;

procedure TfrmLogin.FormActivate(Sender: TObject);
begin
  pnlFundo.Left:= Round((frmLogin.Width-pnlFundo.Width )/ 2);
  pnlFundo.Top:= Round((frmLogin.Height -pnlFundo.Height )/ 2);
end;

function TfrmLogin.habilitarLogin(teste: string): Integer;
begin
     try
      qryLogin.Active:=True;
      qryLogin.SQL.Add(' SELECT usuario_id   FROM tb_usuarios   '
                               + ' WHERE usuario_nome = (:nome) '
                               + ' AND usuario_senha = (:senha) ' );
      qryLogin.ParamByName('nome').AsString :=edtNome.Text;
      qryLogin.ParamByName('senha').AsString := edtSenha.Text;

      qryLogin.Open;
      Result    :=  (qryLogin.FieldByName('usuario_id').AsInteger);
   except
      Result:= 0;
   end;
   if Assigned(qryLogin) then
      FreeAndNil(qryLogin);
end;


procedure TfrmLogin.pnlBotãoClick(Sender: TObject);
var
   login:TZQuery;
begin
   login:= login.Create(self);
   if login >0 then
   habilitarLogin();

end;



end.
